steps:
  # Use Buildpacks to create a container image
  - name: "gcr.io/k8s-skaffold/pack"
    dir: "app/"
    entrypoint: "pack"
    args:
      [
        "build",
        "--builder=gcr.io/buildpacks/builder",
        "${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}"
      ]

  # Pushing to artifact registry
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}"
      ]

  # Run a vulnerability scan at _SECURITY level
  - id: Vulnerability scan
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud artifacts docker images scan \
        ${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA} \
        --remote --location europe \
        --format="value(response.scan)" > /workspace/scan_id.txt

  # Analyze the result of the scan
  - id: Severity check
    name: "gcr.io/cloud-builders/gcloud"
    entrypoint: "bash"
    args:
      - "-c"
      - |
        gcloud artifacts docker images list-vulnerabilities $(cat /workspace/scan_id.txt) \
        --format="value(vulnerability.effectiveSeverity)" | if grep -Fxq ${_SEVERITY}; \
        then echo "Failed vulnerability check for ${_SEVERITY} level" && exit 1; else echo "No ${_SEVERITY} vulnerability found, congrats !" && exit 0; fi

  # Push to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    args:
      [
        "run",
        "deploy",
        "${_IMAGE_NAME}",
        "--image",
        "${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}",
        "--region",
        "${_GCP_REGION}",
        "--platform",
        "managed",
        "--allow-unauthenticated"
      ]

images:
  - ${_GCP_REGION}-docker.pkg.dev/${_GCP_PROJECT}/${_ARTIFACT_REGISTRY_REPO}/${_IMAGE_NAME}:${SHORT_SHA}
